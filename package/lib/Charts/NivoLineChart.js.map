{"version":3,"sources":["../../src/Charts/NivoLineChart.tsx"],"names":["NivoLineChart","props","xScaleOpts","type","axes","x","dataType","format","dataFormat","precision","timePrecision","axisBottomOpts","displayFormat","legend","label","legendOffset","legendPosition","responsiveHeight","chartTitle","height","data","enableArea","top","MARGIN","right","bottom","left","min","max","stacked","reverse","d","toString","orient","tickSize","tickPadding","tickRotation","y","e","DisplayFormatter","formatKMB","colors","theme","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA2B;AAC/C,MAAMC,UAAU,GAAG;AACjBC,IAAAA,IAAI,EAAEF,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaC,QAA3B,GAAsCL,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaC,QAAnD,GAA8D,OADnD;AAEjBC,IAAAA,MAAM,EAAEN,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaG,UAFlB;AAGjBC,IAAAA,SAAS,EAAER,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaK;AAHrB,GAAnB;AAKA,MAAMC,cAAc,GAAG;AACrBJ,IAAAA,MAAM,EAAEN,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaO,aADd;AAErBC,IAAAA,MAAM,EAAEZ,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaS,KAFd;AAGrBC,IAAAA,YAAY,EAAE,EAHO;AAIrBC,IAAAA,cAAc,EAAE;AAJK,GAAvB;AAMA,MAAMC,gBAAgB,GAAGhB,KAAK,CAACiB,UAAN,GAAmB,mBAAnB,GAAyC,MAAlE;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAZ,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwDlB,KAAK,CAACiB,UAA9D,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEF;AAAV;AAAZ,kBACE,gCAAC,oBAAD;AACE,IAAA,IAAI,EAAEhB,KAAK,CAACmB,IADd;AAEE,IAAA,UAAU,EAAEnB,KAAK,CAACoB,UAFpB;AAGE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEC,kBAAOD,GAAd;AAAmBE,MAAAA,KAAK,EAAED,kBAAOC,KAAjC;AAAwCC,MAAAA,MAAM,EAAEF,kBAAOE,MAAvD;AAA+DC,MAAAA,IAAI,EAAEH,kBAAOG;AAA5E,KAHV;AAIE,IAAA,MAAM,EAAExB,UAJV;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBwB,MAAAA,GAAG,EAAE1B,KAAK,CAACoB,UAAN,GAAmB,CAAnB,GAAuB,MAA9C;AAAsDO,MAAAA,GAAG,EAAE,MAA3D;AAAmEC,MAAAA,OAAO,EAAE,KAA5E;AAAmFC,MAAAA,OAAO,EAAE;AAA5F,KALV;AAME,IAAA,OAAO,EAAE,IANX;AAOE,IAAA,SAAS,EAAE,IAPb;AAQE,IAAA,UAAU,EAAEnB,cARd;AASE,IAAA,OAAO,EAAE,iBAACoB,CAAD,EAAO;AACd,UAAI9B,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaC,QAAb,IAAyB,MAA7B,EAAqC;AACnC,eAAO,8BAAWL,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,CAAX,CAAaO,aAAtC,EAAqDmB,CAArD,CAAP;AACD,OAFD,MAEO;AACL,eAAOA,CAAC,CAACC,QAAF,EAAP;AACD;AACF,KAfH;AAgBE,IAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,MADA;AAERC,MAAAA,QAAQ,EAAE,CAFF;AAGRC,MAAAA,WAAW,EAAE,CAHL;AAIRC,MAAAA,YAAY,EAAE,CAJN;AAKRvB,MAAAA,MAAM,EAAEZ,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWiC,CAAX,CAAavB,KAL3B;AAMRC,MAAAA,YAAY,EAAE,CAAC,EANP;AAORC,MAAAA,cAAc,EAAE,QAPR;AAQRT,MAAAA,MAAM,EAAE,gBAAC+B,CAAD,EAAO;AAAE,eAAOC,6BAAiBC,SAAjB,CAA2BF,CAA3B,CAAP;AAAsC;AAR/C,KAhBZ;AA0BE,IAAA,MAAM,EAAErC,KAAK,CAACwC,MA1BhB;AA2BE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KA3Bd;AA4BE,IAAA,UAAU,EAAC,GA5Bb;AA6BE,IAAA,iBAAiB,EAAE,CAAC,EA7BtB;AA8BE,IAAA,OAAO,EAAE,IA9BX;AA+BE,IAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,cADV;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,OAAO,EAAE,KAHX;AAIEC,MAAAA,UAAU,EAAE,GAJd;AAKEC,MAAAA,UAAU,EAAE,CALd;AAMEC,MAAAA,YAAY,EAAE,CANhB;AAOEC,MAAAA,aAAa,EAAE,eAPjB;AAQEC,MAAAA,SAAS,EAAE,EARb;AASEC,MAAAA,UAAU,EAAE,EATd;AAUEC,MAAAA,WAAW,EAAE,IAVf;AAWEC,MAAAA,UAAU,EAAE,EAXd;AAYEC,MAAAA,WAAW,EAAE,QAZf;AAaEC,MAAAA,iBAAiB,EAAE,mBAbrB;AAcEC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,EAAE,EAAE,OADN;AAEEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,cAAc,EAAE,oBADX;AAELP,UAAAA,WAAW,EAAE;AAFR;AAFT,OADO;AAdX,KADO;AA/BX,IADF,CAFF,CADF;AAiED,CA9ED;;eAgFepD,a","sourcesContent":["import React from \"react\"\nimport { MARGIN } from './Constants'\nimport { ResponsiveLine } from '@nivo/line'\nimport { LineChartProps } from './ChartProps'\nimport DisplayFormatter from './DisplayFormatter'\nimport { timeFormat } from 'd3-time-format'\n\nconst NivoLineChart = (props: LineChartProps) => {\n  const xScaleOpts = {\n    type: props.axes && props.axes.x.dataType ? props.axes.x.dataType : \"point\",\n    format: props.axes && props.axes.x.dataFormat,\n    precision: props.axes && props.axes.x.timePrecision\n  }\n  const axisBottomOpts = {\n    format: props.axes && props.axes.x.displayFormat,\n    legend: props.axes && props.axes.x.label,\n    legendOffset: 36,\n    legendPosition: 'middle'\n  }\n  const responsiveHeight = props.chartTitle ? \"calc(100% - 20px)\" : \"100%\"\n  return (\n    <div style={{ height: \"100%\" }}>\n      <div className=\"text-center text-gray-700 font-medium\">{props.chartTitle}</div>\n      <div style={{ height: responsiveHeight }}>\n        <ResponsiveLine\n          data={props.data}\n          enableArea={props.enableArea}\n          margin={{ top: MARGIN.top, right: MARGIN.right, bottom: MARGIN.bottom, left: MARGIN.left }}\n          xScale={xScaleOpts}\n          yScale={{ type: 'linear', min: props.enableArea ? 0 : 'auto', max: 'auto', stacked: false, reverse: false }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={axisBottomOpts}\n          xFormat={(d) => {\n            if (props.axes.x.dataType == \"time\") {\n              return timeFormat(props.axes && props.axes.x.displayFormat)(d)\n            } else {\n              return d.toString()\n            }\n          }}\n          axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: props.axes && props.axes.y.label,\n            legendOffset: -45,\n            legendPosition: 'middle',\n            format: (e) => { return DisplayFormatter.formatKMB(e) }\n          }}\n          colors={props.colors}\n          pointColor={{ theme: 'background' }}\n          pointLabel=\"y\"\n          pointLabelYOffset={-12}\n          useMesh={true}\n          legends={[\n            {\n              anchor: 'bottom-right',\n              direction: 'column',\n              justify: false,\n              translateX: 100,\n              translateY: 0,\n              itemsSpacing: 0,\n              itemDirection: 'left-to-right',\n              itemWidth: 80,\n              itemHeight: 20,\n              itemOpacity: 0.75,\n              symbolSize: 12,\n              symbolShape: 'circle',\n              symbolBorderColor: 'rgba(0, 0, 0, .5)',\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemBackground: 'rgba(0, 0, 0, .03)',\n                    itemOpacity: 1\n                  }\n                }\n              ]\n            }\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default NivoLineChart"],"file":"NivoLineChart.js"}