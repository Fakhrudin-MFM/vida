{"version":3,"sources":["../../src/Charts/DataLoader.tsx"],"names":["DataLoader","props","vizData","d","fetch","response","json","setState","data","vizName","url","indexOf","window","then","res","getDataUrl","prevProps","JSON","stringify","state","grammarParser","charts","vizInfo","headerPadding","height","width","containerClassName","parse","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from \"react\"\nimport Header from './Header'\nimport Footer from './Footer'\nimport GrammarParser from './GrammarParser'\nimport { JSONVizData, DataLoaderProps, DataLoaderState } from './VizData'\n\nimport { containerClassName } from './Constants'\n\nclass DataLoader extends Component<DataLoaderProps, DataLoaderState> {\n  private vizName: string\n  private vizData: JSONVizData\n\n  public constructor(props: DataLoaderProps) {\n    super(props)\n    this.vizName = props.vizName\n    // serialize vizData so it won't change props\n    if (props.vizData) {\n      this.vizData = JSON.parse(JSON.stringify(props.vizData))\n    }\n    this.state = { data: null };\n  }\n\n  private getDataUrl = async () => {\n    for (const d of this.vizData[\"data\"]) {\n      if (d[\"url\"]) {\n        // retrieve data from url to send to client\n        const response = await fetch(d[\"url\"])\n        const json = await response.json()\n        d[\"values\"] = json\n      }\n    }\n    this.setState({ data: this.vizData })\n  }\n\n  public componentDidMount = () => {\n    if (this.vizName) {\n      let url = ''\n      if (this.vizName.indexOf('https://') == 0) {\n        url = this.vizName\n      } else {\n        url = '/viz/' + this.vizName\n      }\n      window.fetch(url)\n        .then((res) => res.json())\n        .then(async (json) => {\n          for (const d of json[\"data\"]) {\n            if (d[\"url\"]) {\n              // retrieve data from url to send to client\n              const response = await fetch(d[\"url\"])\n              const json = await response.json()\n              d[\"values\"] = json\n            }\n          }\n          this.setState({ data: json })\n        })\n    } else {\n      this.getDataUrl()\n    }\n  }\n\n  public componentDidUpdate = (prevProps: DataLoaderProps) => {\n    if (JSON.stringify(this.props) != JSON.stringify(prevProps)) {\n      this.vizData = this.props.vizData\n      this.getDataUrl()\n    }\n  }\n\n  public render = () => {\n    if (this.state.data) {\n      const vizData = this.state.data\n      const grammarParser = GrammarParser(vizData)\n      const charts = grammarParser.charts\n      const vizInfo = grammarParser.vizInfo\n      let headerPadding = \"80\"\n      if (!vizInfo[\"header\"]) {\n        headerPadding = \"30\"\n      }\n      return (\n        <div style={{height: \"100%\", width: \"100%\"}}>\n          {vizInfo[\"header\"] &&\n            <Header name={vizInfo[\"header\"][\"text\"]}\n                    backgroundColor={vizInfo[\"header\"][\"backgroundColor\"]}\n                    align={vizInfo[\"header\"][\"align\"]} />}\n          <div className={containerClassName} style={{height: \"calc(100% - \" + headerPadding + \"px)\"}}>\n            {charts}\n          </div>\n          <Footer description={vizInfo[\"description\"]}/>\n        </div>\n      )\n    } else {\n      return (\n        <div className={containerClassName + \" text-center\"}>Loading...</div>\n      )\n    }\n  }\n}\n\nexport default DataLoader\n"],"file":"DataLoader.js"}